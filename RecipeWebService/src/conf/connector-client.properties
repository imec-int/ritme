#wordt niet meer gebruikt sinds 20-06-2016 - mag bij een volgende commit verdwijnen.
# Path to the log file.
LOG4J=/conf/log4j.xml

# eHealth Integratie platform
# Endpoint locations (needs to be according the environment changes)
#endpoint.codage=https://wwwint.ehealth.fgov.be/codage_1_0/codage
#endpoint.seals.v1=https://wwwint.ehealth.fgov.be/seals/v2/EncodingService
#endpoint.ts.consult=https://wwwint.ehealth.fgov.be/timestampconsult/v1/timestampconsult
#endpoint.ts.authority=https://wwwint.ehealth.fgov.be/timestampauthority/v1/timestampauthority
#endpoint.sts=https://services-int.ehealth.fgov.be/IAM/Saml11TokenService/Legacy/v1
#endpoint.etk=https://services-int.ehealth.fgov.be/EtkDepot/v1
#endpoint.kgss=https://services-int.ehealth.fgov.be/Kgss/v1
#endpoint.prescriber=https://services-int.ehealth.fgov.be/pilot/Recip-e/v1/Prescriber_v1
#endpoint.technical=https://services-int.ehealth.fgov.be/pilot/Recip-e/v1/Technical_v1

# eHealth Preprod/Acceptance platform
# Endpoint locations (needs to be according the environment changes)
endpoint.codage=https://services-acpt.ehealth.fgov.be/codage_1_0/codage
endpoint.seals.v1=https://services-acpt.ehealth.fgov.be/Seals/v1 
endpoint.ts.consult=https://wwwacc.ehealth.fgov.be/timestampconsult_1_3/timestampconsult
endpoint.ts.authority=https://wwwacc.ehealth.fgov.be/timestampauthority_1_5/timestampauthority
endpoint.sts=https://services-acpt.ehealth.fgov.be/IAM/Saml11TokenService/Legacy/v1
endpoint.etk=https://services-acpt.ehealth.fgov.be/EtkDepot/v1
endpoint.kgss=https://services-acpt.ehealth.fgov.be/Kgss/v1
endpoint.prescriber=https://services-acpt.ehealth.fgov.be/pilot/Recip-e/v1/Prescriber_v1
endpoint.technical=https://services-acpt.ehealth.fgov.be/pilot/Recip-e/v1/Technical_v1
endpoint.addressbook=https://services-acpt.ehealth.fgov.be/AddressBook/v1

# eHealth Production platform
# Endpoint locations (needs to be according to the environment changes)
#endpoint.codage=https://www.ehealth.fgov.be/codage_1_0/codage
#endpoint.seals.v1=https://www.ehealth.fgov.be/seals/v2/EncodingService
#endpoint.ts.consult=https://www.ehealth.fgov.be/timestampconsult_1_3/timestampconsult
#endpoint.ts.authority=https://www.ehealth.fgov.be/timestampauthority_1_5/timestampauthority
#endpoint.sts=https://services.ehealth.fgov.be/IAM/Saml11TokenService/Legacy/v1
#endpoint.etk=https://services.ehealth.fgov.be/EtkDepot/v1
#endpoint.kgss=https://services.ehealth.fgov.be/Kgss/v1
#endpoint.prescriber=https://services.ehealth.fgov.be/Recip-e/v1/Prescriber_v1
#endpoint.technical=https://services.ehealth.fgov.be/Recip-e/v1/Technical_v1

notification.XSD=/conf/XSD/20100901-recipe/notification.xsd
feedback.XSD=/conf/XSD/20100901-recipe/feedback.xsd
kmehr.XSD=/conf/XSD/20100901-kmehr/ehealth-kmehr/XSD/kmehr_elements-1_1.xsd

##############################################################################################################################################
# Configuration of ConfigurationModules																										 #
#																																	 		 #
# The enumeration of all the configurationmodules that are loaded when the configuration is (re)loaded.							             #
# The properties must start with connector.configmodule followed by a unique increasing number. Gaps are not allowed.						 #
#																																    		 #
##############################################################################################################################################
connector.configmodule.4=be.ehealth.technicalconnector.config.impl.ConfigurationModuleSSL
connector.configmodule.1=be.ehealth.technicalconnector.config.impl.ConfigurationModuleClassloader 
connector.configmodule.2=be.ehealth.technicalconnector.config.impl.ConfigurationModuleLogging 
connector.configmodule.3=be.ehealth.technicalconnector.config.impl.ConfigurationModuleProxy 
#connector.configmodule.6=be.ehealth.technicalconnector.config.impl.ConfigurationModuleSSLVerifier 
connector.configmodule.5=be.ehealth.technicalconnector.config.impl.ConfigurationModuleXmlSec 
##############################################################################################################################################
# Configuration of ConfigurationModuleProxy																							         #
#																																			 #
#  * If you don't load this module the default system proxy settings are used.																 #
#  * There are 2 types of proxy that are supported (HTTP(S) and SOCKS)   		                                        		         	 #
#		more information can be found http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html						 		 #
#																																	 		 #
##############################################################################################################################################
http.proxyHost=www-proxy
http.proxyPort=3128
#http.proxyUser=
#http.proxyPassword=
https.proxyHost=www-proxy
https.proxyPort=3128
#https.proxyUser=
#https.proxyPassword=
#socksProxyHost=
#socksProxyPort=

##############################################################################################################################################
# Belgian eID support configuration																									         #
#																																			 #
#  * For the moment there are 2 'technologies' of BeID usage implemented. One is using the PKCS11 technology and the other is using the 	 #
#	 PC/SC technology. You can change the implementation by changing the property provider.class. 											 #
#      . PKCS11  provider.class			be.ehealth.technicalconnector.service.sts.security.impl.pkcs11.SunPKCS11ProviderAdaptor				 #
#      			 keystoreadaptor.class	be.ehealth.technicalconnector.service.sts.security.impl.pkcs11.SunPKCS11KeyStoreAdaptor				 #
#	   . PC/SC   provider.class			be.ehealth.technicalconnector.service.sts.security.impl.beid.BeIDProviderAdaptor					 #
#	   			 keystoreadaptor.class	be.ehealth.technicalconnector.service.sts.security.impl.beid.BeIDKeyStoreAdaptor					 #
#  * Properties of the PKCS11 technology																									 #
#     The PKCSS11 implementation relies on the fedICT middleware																			 #
# 	   . eid.ddl					location of the dll installed by the fedICT middleware													 #
#	   . callbackhandler.class		handler that is used by the PKCSS11 in order to ask the pin code of the beID							 #
#  * Properties of the PC/SC technology																									     #
#	   . no specific properties are needed																									 #
#  * GUI class for PIN code entering :																										 #
#	   . beidcardgui.class			location of the BeIDCardGUI class implementation														 #
#			default value 			be.ehealth.technicalconnector.service.sts.security.impl.beid.impl.BeIDConnectorGuiSwing					 #
#																																	 		 #
##############################################################################################################################################
provider.class=uz.ehealth.vitalink.connector.UZKeyStoreAndProviderAdaptor
keystoreadaptor.class=uz.ehealth.vitalink.connector.UZKeyStoreAndProviderAdaptor
#provider.class=be.ehealth.technicalconnector.service.sts.security.impl.beid.BeIDProviderAdaptor
#keystoreadaptor.class=be.ehealth.technicalconnector.service.sts.security.impl.beid.BeIDKeyStoreAdaptor
eid.dll=C:\\WINDOWS\\System32\\Belgium Identity Card PKCS11.dll
callbackhandler.class=com.sun.security.auth.callback.TextCallbackHandler
beidcardgui.class=be.ehealth.technicalconnector.service.sts.security.impl.beid.impl.BeIDConnectorGuiSwing

##############################################################################################################################################
# Configuration of KEYSTORE directory																								         #
#																																	 		 #
#  * The directory where all the certificates/keystore are placed.	
#  * There must be a slash (/) ad the and of the path.																		 #
#																																	 		 #
##############################################################################################################################################
KEYSTORE_DIR=/conf/p12/acc/

##############################################################################################################################################
# Configuration of Crypto Implementation																							         #
#																																			 #
#  * The ETEE crypto lib needs a keystore that contains all the CA that are trusted by the system. This keystore must be located in the 	 #
#    the directory specified in the KEYSTORE_DIR. The CAKEYSTORE_LOCATION contains the name of the keystore and CAKEYSTORE_PASSWORD contains #
#    the password of that keystore. The crypto lib expects a Java Keystore so only JKS files are supported.								 	 #
#  * The property crypto.revocationstatuschecker contains the class that must be used to check the validity of a certificate.				 #
#    For the moment there are 3 possible values, see the javadoc of the ETEE crypto lib and the connector for more information.				 #
#	. be.ehealth.technicalconnector.service.etee.impl.ConnectorRevocationStatusChecker																 #
# 	. be.smals.ehealth.etee.crypto.cert.MockRevocationStatusChecker																			 #
#   . be.smals.ehealth.etee.crypto.cert.CrlRevocationStatusChecker																			 #
#																																	 		 #
##############################################################################################################################################
crypto.revocationstatuschecker.classname=be.ehealth.technicalconnector.service.etee.impl.ConnectorRevocationStatusChecker
CAKEYSTORE_LOCATION=caCertificateKeystore.jks
CAKEYSTORE_PASSWORD=system

##############################################################################################################################################
# Configuration of ConfigurationModuleSSL																							         #
#																																			 #
#  * The TrustStore containing the list of trusted root CA's for SSL communication                                           		         #
#		. trustore_location	: path of the JavaKeyStore (JKS) (base is KEYSTORE_DIR property)                                         		 #
#		. trustore_password	: password of the JKS that is specified in the property trustor_location                                		 #
#  * If you want to log all the debug information when an SSL connection is established. This option must be turned on              		 #
#		. connector.configruationmodule.ssl.debug																					 		 #
#																																	 		 #
##############################################################################################################################################
truststore_location=truststore.jks
truststore_password=changeit
connector.configurationmodule.ssl.debug=false

##############################################################################################################################################
# Configuration of the Session Management																							         #
#																																			 #
#  * The properties that starts with user contains the information of the user that is requesting the session.							 	 #
#  * 																																		 #
##############################################################################################################################################
# The the user information, inss used in the SAML attributes
user.firstname=
user.lastname=
user.inss=

# Session validation
sessionmanager.validity.token=5

# The keystores file names 
# sessionmanager.holderofkey.keystore=
# sessionmanager.encryption.keystore=
# sessionmanager.identification.keystore=

# The SAML attributes and designators
# sessionmanager.samlattributedesignator.1=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:certificateholder:person:ssin
# sessionmanager.samlattributedesignator.2=urn:be:fgov:identification-namespace,urn:be:fgov:person:ssin
# sessionmanager.samlattributedesignator.3=urn:be:fgov:certified-namespace:ehealth,urn:be:fgov:person:ssin:ehealth:1.0:doctor:nihii11
# sessionmanager.samlattribute.1=urn:be:fgov:identification-namespace,urn:be:fgov:person:ssin,${user.inss}
# sessionmanager.samlattribute.2=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:certificateholder:person:ssin,${user.inss}

###ORG_HOSPITAL
#sessionmanager.activate.autorenew=true
user.nihii=##user.nihii##
session.default.keystore=//uz/data/Admin/certificates/ehealth/accpt/UZL/default/keystore.pkcs12
sessionmanager.identification.keystore=${session.default.keystore}
sessionmanager.holderofkey.keystore=${session.default.keystore}
sessionmanager.encryption.keystore=${session.default.keystore}
sessionmanager.samlattribute.1=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:certificateholder:hospital:nihii-number,${user.nihii}
sessionmanager.samlattribute.2=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:hospital:nihii-number,${user.nihii}
sessionmanager.samlattributedesignator.1=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:certificateholder:hospital:nihii-number
sessionmanager.samlattributedesignator.2=urn:be:fgov:identification-namespace,urn:be:fgov:ehealth:1.0:hospital:nihii-number
sessionmanager.samlattributedesignator.3=urn:be:fgov:certified-namespace,urn:be:fgov:ehealth:1.0:certificateholder:hospital:nihii-number:recognisedhospital:boolean
be.fgov.ehealth.technicalconnector.bootstrap.tsl.autoupdater.active=false

# STSServiceImpl implementation class (default value be.ehealth.technicalconnector.service.sts.impl.STSServiceImpl)
service.sts.class=be.ehealth.technicalconnector.service.sts.impl.STSServiceImpl

##############################################################################################################################################
# Configuration of keystore for timestamping																								 #
#																																	 		 #
#    the keystore file must be placed in the KEYSTORE_DIR with the name {timestamp.signature.keystore.path}	                                 #
#	 the password and the aliases in the keystore to use must also be provided                                                               #
#																																	 		 #
##############################################################################################################################################
timestamp.signature.keystore.path=tsacertificate.jks
timestamp.signature.keystore.pwd=ttsa
#each of the aliases to use must be defined here , in format timestamp.signature.cert.alias.X , where the numbers in X go from 1 to .. , without gaps
timestamp.signature.cert.alias.1=ttsa01
timestamp.signature.cert.alias.2=ttsa02
timestamp.signature.cert.alias.3=ttsa03
timestamp.signature.cert.alias.4=ttsa04
timestamp.signature.cert.alias.5=ttsa06
timestamp.signature.cert.alias.6=ttsa07
timestamp.signature.cert.alias.7=ttsa08